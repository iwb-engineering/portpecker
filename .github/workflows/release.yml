name: Release

on:
    push:
        tags:
            - "v*"

jobs:
    build:
        name: Build and Release
        runs-on: ubuntu-latest
        strategy:
            matrix:
                include:
                    - goos: windows
                      goarch: amd64
                    - goos: windows
                      goarch: 386
                    - goos: darwin
                      goarch: arm64

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.22"

            - name: Build
              env:
                  GOOS: ${{ matrix.goos }}
                  GOARCH: ${{ matrix.goarch }}
              run: |
                  binary_name="${{ github.event.repository.name }}_${{ matrix.goos }}_${{ matrix.goarch }}"
                  if [ "${{ matrix.goos }}" = "windows" ]; then
                    binary_name="${binary_name}.exe"
                  fi
                  go build -v -o $binary_name .

            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: binaries
                  path: ${{ github.event.repository.name }}_*

    release:
        name: Create Release
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Download artifacts
              uses: actions/download-artifact@v3
              with:
                  name: binaries

            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                  files: |
                      ${{ github.event.repository.name }}_*
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
